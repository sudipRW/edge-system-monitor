/*
 * PortainerCE API
 * Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API. Examples are available at https://documentation.portainer.io/api/api-examples/ You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).  # Authentication  Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used. Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request with the **Bearer** authentication mechanism.  Example:  ``` Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE ```  # Security  Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).  Different access policies are available:  - Public access - Authenticated access - Restricted access - Administrator access  ### Public access  No authentication is required to access the environments(endpoints) with this access policy.  ### Authenticated access  Authentication is required to access the environments(endpoints) with this access policy.  ### Restricted access  Authentication is required to access the environments(endpoints) with this access policy. Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.  ### Administrator access  Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.  # Execute Docker requests  Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).  Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.  To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).  # Private Registry  Using private registry, you will need to pass a based64 encoded JSON string ‘{\"registryId\":\\<registryID value\\>}’ inside the Request Header. The parameter name is \"X-Registry-Auth\". \\<registryID value\\> - The registry ID where the repository was created.  Example:  ``` eyJyZWdpc3RyeUlkIjoxfQ== ```  **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/). 
 *
 * OpenAPI spec version: 2.21.3
 * Contact: info@portainer.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GittypesRepoConfig', 'model/PortainerCustomTemplateVariableDefinition', 'model/PortainerResourceControl'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GittypesRepoConfig'), require('./PortainerCustomTemplateVariableDefinition'), require('./PortainerResourceControl'));
  } else {
    // Browser globals (root is window)
    if (!root.PortainerCeApi) {
      root.PortainerCeApi = {};
    }
    root.PortainerCeApi.PortainerCustomTemplate = factory(root.PortainerCeApi.ApiClient, root.PortainerCeApi.GittypesRepoConfig, root.PortainerCeApi.PortainerCustomTemplateVariableDefinition, root.PortainerCeApi.PortainerResourceControl);
  }
}(this, function(ApiClient, GittypesRepoConfig, PortainerCustomTemplateVariableDefinition, PortainerResourceControl) {
  'use strict';

  /**
   * The PortainerCustomTemplate model module.
   * @module model/PortainerCustomTemplate
   * @version 2.21.3
   */

  /**
   * Constructs a new <code>PortainerCustomTemplate</code>.
   * @alias module:model/PortainerCustomTemplate
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PortainerCustomTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PortainerCustomTemplate} obj Optional instance to populate.
   * @return {module:model/PortainerCustomTemplate} The populated <code>PortainerCustomTemplate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('CreatedByUserId'))
        obj.createdByUserId = ApiClient.convertToType(data['CreatedByUserId'], 'Number');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('EntryPoint'))
        obj.entryPoint = ApiClient.convertToType(data['EntryPoint'], 'String');
      if (data.hasOwnProperty('GitConfig'))
        obj.gitConfig = GittypesRepoConfig.constructFromObject(data['GitConfig']);
      if (data.hasOwnProperty('Id'))
        obj.id = ApiClient.convertToType(data['Id'], 'Number');
      if (data.hasOwnProperty('Logo'))
        obj.logo = ApiClient.convertToType(data['Logo'], 'String');
      if (data.hasOwnProperty('Note'))
        obj.note = ApiClient.convertToType(data['Note'], 'String');
      if (data.hasOwnProperty('Platform'))
        obj.platform = ApiClient.convertToType(data['Platform'], 'Number');
      if (data.hasOwnProperty('ProjectPath'))
        obj.projectPath = ApiClient.convertToType(data['ProjectPath'], 'String');
      if (data.hasOwnProperty('ResourceControl'))
        obj.resourceControl = PortainerResourceControl.constructFromObject(data['ResourceControl']);
      if (data.hasOwnProperty('Title'))
        obj.title = ApiClient.convertToType(data['Title'], 'String');
      if (data.hasOwnProperty('Type'))
        obj.type = ApiClient.convertToType(data['Type'], 'Number');
      if (data.hasOwnProperty('edgeTemplate'))
        obj.edgeTemplate = ApiClient.convertToType(data['edgeTemplate'], 'Boolean');
      if (data.hasOwnProperty('isComposeFormat'))
        obj.isComposeFormat = ApiClient.convertToType(data['isComposeFormat'], 'Boolean');
      if (data.hasOwnProperty('variables'))
        obj.variables = ApiClient.convertToType(data['variables'], [PortainerCustomTemplateVariableDefinition]);
    }
    return obj;
  }

  /**
   * User identifier who created this template
   * @member {Number} createdByUserId
   */
  exports.prototype.createdByUserId = undefined;

  /**
   * Description of the template
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Path to the Stack file
   * @member {String} entryPoint
   */
  exports.prototype.entryPoint = undefined;

  /**
   * @member {module:model/GittypesRepoConfig} gitConfig
   */
  exports.prototype.gitConfig = undefined;

  /**
   * CustomTemplate Identifier
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * URL of the template's logo
   * @member {String} logo
   */
  exports.prototype.logo = undefined;

  /**
   * A note that will be displayed in the UI. Supports HTML content
   * @member {String} note
   */
  exports.prototype.note = undefined;

  /**
   * Platform associated to the template. Valid values are: 1 - 'linux', 2 - 'windows'
   * @member {Number} platform
   */
  exports.prototype.platform = undefined;

  /**
   * Path on disk to the repository hosting the Stack file
   * @member {String} projectPath
   */
  exports.prototype.projectPath = undefined;

  /**
   * @member {module:model/PortainerResourceControl} resourceControl
   */
  exports.prototype.resourceControl = undefined;

  /**
   * Title of the template
   * @member {String} title
   */
  exports.prototype.title = undefined;

  /**
   * Type of created stack: * 1 - swarm * 2 - compose * 3 - kubernetes
   * @member {Number} type
   */
  exports.prototype.type = undefined;

  /**
   * EdgeTemplate indicates if this template purpose for Edge Stack
   * @member {Boolean} edgeTemplate
   */
  exports.prototype.edgeTemplate = undefined;

  /**
   * IsComposeFormat indicates if the Kubernetes template is created from a Docker Compose file
   * @member {Boolean} isComposeFormat
   */
  exports.prototype.isComposeFormat = undefined;

  /**
   * @member {Array.<module:model/PortainerCustomTemplateVariableDefinition>} variables
   */
  exports.prototype.variables = undefined;


  return exports;
}));
